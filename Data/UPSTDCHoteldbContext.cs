// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Hotel.data;

public partial class UPSTDCHoteldbContext : DbContext
{
    public UPSTDCHoteldbContext(DbContextOptions<UPSTDCHoteldbContext> options)
        : base(options)
    {
    }

    public virtual DbSet<B01BookingDetail> B01BookingDetails { get; set; }

    public virtual DbSet<B02BookingRoomDetail> B02BookingRoomDetails { get; set; }

    public virtual DbSet<B03TransactionDetail> B03TransactionDetails { get; set; }

    public virtual DbSet<B04ChickInDetail> B04ChickInDetails { get; set; }

    public virtual DbSet<CityMaster> CityMasters { get; set; }

    public virtual DbSet<InvoiceNotbl> InvoiceNotbls { get; set; }

    public virtual DbSet<Login> Logins { get; set; }

    public virtual DbSet<RateMaster> RateMasters { get; set; }

    public virtual DbSet<StateMaster> StateMasters { get; set; }

    public virtual DbSet<TblBedMaster> TblBedMasters { get; set; }

    public virtual DbSet<TblCategoryMaster> TblCategoryMasters { get; set; }

    public virtual DbSet<TblHotelMaster> TblHotelMasters { get; set; }

    public virtual DbSet<TblRoomDetail> TblRoomDetails { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<B01BookingDetail>(entity =>
        {
            entity.HasKey(e => e.BookingId).HasName("PK__B01_Book__73951AEDDABE13F0");

            entity.ToTable("B01_BookingDetails");

            entity.Property(e => e.BillNo)
                .HasMaxLength(16)
                .IsUnicode(false);
            entity.Property(e => e.BookingDate).HasColumnType("datetime");
            entity.Property(e => e.BookingGuestname)
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.BookingSource)
                .HasMaxLength(16)
                .IsUnicode(false);
            entity.Property(e => e.BookingStatus)
                .HasMaxLength(32)
                .IsUnicode(false);
            entity.Property(e => e.CancelDate).HasColumnType("datetime");
            entity.Property(e => e.CheckInDate1).HasColumnType("datetime");
            entity.Property(e => e.CheckOutDate1).HasColumnType("datetime");
            entity.Property(e => e.DocketeNo)
                .HasMaxLength(16)
                .IsUnicode(false);
            entity.Property(e => e.DueAmount).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.EntryBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.EntryDate).HasColumnType("datetime");
            entity.Property(e => e.GuestAddress).HasMaxLength(250);
            entity.Property(e => e.GuestEmailId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("GuestEmailID");
            entity.Property(e => e.GuestGstno)
                .HasMaxLength(32)
                .IsUnicode(false)
                .HasColumnName("GuestGSTNo");
            entity.Property(e => e.GuestLoginId)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.GuestMobileNo)
                .HasMaxLength(16)
                .IsUnicode(false);
            entity.Property(e => e.GuestName).HasMaxLength(250);
            entity.Property(e => e.HotelId)
                .IsRequired()
                .HasMaxLength(32)
                .IsUnicode(false);
            entity.Property(e => e.NetPayable).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.PaidAmount).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.Status)
                .HasMaxLength(32)
                .IsUnicode(false);

            entity.HasOne(d => d.Hotel).WithMany(p => p.B01BookingDetails)
                .HasForeignKey(d => d.HotelId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__B01_Booki__Hotel__571DF1D5");
        });

        modelBuilder.Entity<B02BookingRoomDetail>(entity =>
        {
            entity.HasKey(e => e.B02BookingRoomId).HasName("PK__B02_Book__DB49E7DD66D51CF7");

            entity.ToTable("B02_BookingRoomDetails");

            entity.Property(e => e.B02BookingRoomId).HasColumnName("B02_BookingRoom_ID");
            entity.Property(e => e.BookingStatus)
                .HasMaxLength(32)
                .IsUnicode(false);
            entity.Property(e => e.CancelBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cancelBy");
            entity.Property(e => e.CancelDate).HasColumnType("datetime");
            entity.Property(e => e.Cgst)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("CGST");
            entity.Property(e => e.DiscountPer).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.DisountAmount).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.DoubleOccupancyAmt).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.DoubleOccupancyCharge).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.EntryBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.EntryDate).HasColumnType("datetime");
            entity.Property(e => e.ExtraBedCharge).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.ExtraBedamt).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.GrossAmount).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.GstPer)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("GStPer");
            entity.Property(e => e.Gstnature)
                .HasMaxLength(32)
                .IsUnicode(false)
                .HasColumnName("GSTNature");
            entity.Property(e => e.HotelId)
                .IsRequired()
                .HasMaxLength(32)
                .IsUnicode(false);
            entity.Property(e => e.RefundAmt).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.RefundPer).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.RoomAmt).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.RoomCharge).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.Sgst)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("SGST");
            entity.Property(e => e.TotalGst)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("TotalGST");
            entity.Property(e => e.TotalPayable).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.TotalRoomAmt).HasColumnType("decimal(18, 2)");

            entity.HasOne(d => d.Booking).WithMany(p => p.B02BookingRoomDetails)
                .HasForeignKey(d => d.BookingId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__B02_Booki__Booki__619B8048");

            entity.HasOne(d => d.Category).WithMany(p => p.B02BookingRoomDetails)
                .HasForeignKey(d => d.CategoryId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__B02_Booki__Categ__6383C8BA");

            entity.HasOne(d => d.Hotel).WithMany(p => p.B02BookingRoomDetails)
                .HasForeignKey(d => d.HotelId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__B02_Booki__Hotel__628FA481");
        });

        modelBuilder.Entity<B03TransactionDetail>(entity =>
        {
            entity.HasKey(e => e.B03TransactionId).HasName("PK__B03_Tran__0AB51EF3648AFB41");

            entity.ToTable("B03_TransactionDetails");

            entity.Property(e => e.B03TransactionId).HasColumnName("B03_Transaction_ID");
            entity.Property(e => e.BillNo)
                .HasMaxLength(32)
                .IsUnicode(false);
            entity.Property(e => e.CardNo)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.DiscountAmt).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.DueAmount).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.EntryBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.EntryDate).HasColumnType("datetime");
            entity.Property(e => e.HashResponce)
                .IsUnicode(false)
                .HasColumnName("hashResponce");
            entity.Property(e => e.Mihpayid)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("mihpayid");
            entity.Property(e => e.NameOnCard)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.NetPayable).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.PaidAmount).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.PaymentMode)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.PaymentSourse)
                .HasMaxLength(32)
                .IsUnicode(false);
            entity.Property(e => e.RequestKey)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("requestKey");
            entity.Property(e => e.ResponseUrl)
                .HasMaxLength(500)
                .HasColumnName("ResponseURL");
            entity.Property(e => e.Tid)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TID");
            entity.Property(e => e.Tmode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TMode");
            entity.Property(e => e.TransactionDate).HasColumnType("datetime");
            entity.Property(e => e.TransactionId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("TransactionID");

            entity.HasOne(d => d.Booking).WithMany(p => p.B03TransactionDetails)
                .HasForeignKey(d => d.BookingId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__B03_Trans__Booki__66603565");
        });

        modelBuilder.Entity<B04ChickInDetail>(entity =>
        {
            entity.HasKey(e => e.B04ChickInId).HasName("PK__B04_Chic__780BE424A57C3864");

            entity.ToTable("B04_ChickInDetails");

            entity.Property(e => e.B04ChickInId).HasColumnName("B04_ChickIn_ID");
            entity.Property(e => e.BookingStatus)
                .HasMaxLength(32)
                .IsUnicode(false);
            entity.Property(e => e.Cgst)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("CGST");
            entity.Property(e => e.CheckInDate).HasColumnType("datetime");
            entity.Property(e => e.CheckOutDate).HasColumnType("datetime");
            entity.Property(e => e.DiscountPer).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.DisountAmount).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.DisountAmountPer)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("DisountAmount_Per");
            entity.Property(e => e.DoubleOccupancyPer).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.EntryBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.EntryDate).HasColumnType("datetime");
            entity.Property(e => e.ExtraBedPricePer).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.GrossAmount).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.GstAmount)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("GStAmount");
            entity.Property(e => e.GstPer)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("GStPer");
            entity.Property(e => e.HotelId)
                .IsRequired()
                .HasMaxLength(32)
                .IsUnicode(false);
            entity.Property(e => e.RoomChargesPerDay).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.RoomNo)
                .IsRequired()
                .HasMaxLength(32)
                .IsUnicode(false);
            entity.Property(e => e.Sgst)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("SGST");
            entity.Property(e => e.TotalGst)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("TotalGST");
            entity.Property(e => e.TotalPayable).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.TotalRoomCharge).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.UpdateDate).HasColumnType("datetime");
            entity.Property(e => e.UpdateStatus)
                .HasMaxLength(32)
                .IsUnicode(false);

            entity.HasOne(d => d.Booking).WithMany(p => p.B04ChickInDetails)
                .HasForeignKey(d => d.BookingId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__B04_Chick__Booki__693CA210");

            entity.HasOne(d => d.Category).WithMany(p => p.B04ChickInDetails)
                .HasForeignKey(d => d.CategoryId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__B04_Chick__Categ__6B24EA82");

            entity.HasOne(d => d.Hotel).WithMany(p => p.B04ChickInDetails)
                .HasForeignKey(d => d.HotelId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__B04_Chick__Hotel__6A30C649");
        });

        modelBuilder.Entity<CityMaster>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CityMast__3214EC276F75E77D");

            entity.ToTable("CityMaster");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CityName)
                .IsRequired()
                .HasMaxLength(500);
            entity.Property(e => e.EntryDate).HasColumnType("datetime");
            entity.Property(e => e.UnitAbbr).HasMaxLength(100);
        });

        modelBuilder.Entity<InvoiceNotbl>(entity =>
        {
            entity.HasKey(e => e.PkInvoiceNoid).HasName("PK__InvoiceN__1322B635BCF15653");

            entity.ToTable("InvoiceNotbl");

            entity.Property(e => e.PkInvoiceNoid).HasColumnName("pk_InvoiceNoid");
            entity.Property(e => e.GregNo).HasColumnName("GRegNo");
            entity.Property(e => e.Rbsno).HasColumnName("RBSno");
        });

        modelBuilder.Entity<Login>(entity =>
        {
            entity.HasKey(e => e.UserName).HasName("PK__Login__C9F28457EA215FA7");

            entity.ToTable("Login");

            entity.Property(e => e.UserName)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CreatedBy).HasColumnName("Created_By");
            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("Created_Date");
            entity.Property(e => e.HotelId)
                .HasMaxLength(32)
                .IsUnicode(false);
            entity.Property(e => e.IsActive)
                .HasDefaultValue(true)
                .HasColumnName("Is_Active");
            entity.Property(e => e.LastLoginDate).HasColumnType("datetime");
            entity.Property(e => e.MRoleId).HasColumnName("M_Role_Id");
            entity.Property(e => e.Opt)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("OPT");
            entity.Property(e => e.Password)
                .IsRequired()
                .HasMaxLength(32)
                .IsUnicode(false);
            entity.Property(e => e.UserId)
                .ValueGeneratedOnAdd()
                .HasColumnName("USER_Id");
        });

        modelBuilder.Entity<RateMaster>(entity =>
        {
            entity.HasKey(e => e.RateId).HasName("PK__RateMast__58A7CCBC40E1FEF8");

            entity.ToTable("RateMaster");

            entity.Property(e => e.RateId).HasColumnName("RateID");
            entity.Property(e => e.EntryBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.EntryDate).HasColumnType("datetime");
            entity.Property(e => e.ExtraBedPercentage).HasColumnType("decimal(18, 4)");
            entity.Property(e => e.HotelId)
                .IsRequired()
                .HasMaxLength(32)
                .IsUnicode(false);
            entity.Property(e => e.PriceDifference).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.PricePerDay).HasColumnType("decimal(18, 2)");

            entity.HasOne(d => d.Category).WithMany(p => p.RateMasters)
                .HasForeignKey(d => d.CategoryId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__RateMaste__Categ__73BA3083");

            entity.HasOne(d => d.Hotel).WithMany(p => p.RateMasters)
                .HasForeignKey(d => d.HotelId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__RateMaste__Hotel__72C60C4A");
        });

        modelBuilder.Entity<StateMaster>(entity =>
        {
            entity.HasKey(e => e.StateId);

            entity.ToTable("StateMaster");

            entity.HasIndex(e => e.StateName, "IX_StateMaster").IsUnique();

            entity.Property(e => e.EntryDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.StateCode)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.StateName)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        modelBuilder.Entity<TblBedMaster>(entity =>
        {
            entity.HasKey(e => e.BedId).HasName("PK__tbl_BedM__CFFED75F24F17C9F");

            entity.ToTable("tbl_BedMaster");

            entity.Property(e => e.BedId).HasColumnName("bed_id");
            entity.Property(e => e.BedName)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.NoofBed).HasColumnName("noofBed");
        });

        modelBuilder.Entity<TblCategoryMaster>(entity =>
        {
            entity.ToTable("tbl_CategoryMaster");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.BedId).HasColumnName("bed_id");
            entity.Property(e => e.Category)
                .IsRequired()
                .HasMaxLength(500);
            entity.Property(e => e.EntryDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Hotelid)
                .IsRequired()
                .HasMaxLength(32)
                .IsUnicode(false)
                .HasColumnName("hotelid");
            entity.Property(e => e.IrctcHotelCode)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("IRCTcHotelCode");
            entity.Property(e => e.IrctccategoryCode)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("IRCTCCategoryCode");
            entity.Property(e => e.IsActive).HasDefaultValue(true);
            entity.Property(e => e.IsOffline).HasDefaultValue(false);
            entity.Property(e => e.MmtcategoryCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("MMTCategoryCode");
            entity.Property(e => e.MmthotelCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("MMTHotelCode");

            entity.HasOne(d => d.Bed).WithMany(p => p.TblCategoryMasters)
                .HasForeignKey(d => d.BedId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__tbl_Categ__bed_i__151B244E");

            entity.HasOne(d => d.Hotel).WithMany(p => p.TblCategoryMasters)
                .HasForeignKey(d => d.Hotelid)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__tbl_Categ__hotel__4BAC3F29");
        });

        modelBuilder.Entity<TblHotelMaster>(entity =>
        {
            entity.HasKey(e => e.HotelId).HasName("PK__tbl_Hote__46023BDF18FA7F97");

            entity.ToTable("tbl_HotelMaster");

            entity.Property(e => e.HotelId)
                .HasMaxLength(32)
                .IsUnicode(false);
            entity.Property(e => e.AccessToken)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Address)
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.ContactNo)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.CounterBillNo).HasColumnName("Counter_BillNo");
            entity.Property(e => e.Description).IsRequired();
            entity.Property(e => e.EmailId)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.EntryDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Fssaino)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("FSSAINo");
            entity.Property(e => e.Gstno)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("GSTNo");
            entity.Property(e => e.HotalCodenew)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.HotelName)
                .IsRequired()
                .HasMaxLength(500);
            entity.Property(e => e.HotelNameCity)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("HotelName_City");
            entity.Property(e => e.HotelUrlNew)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("HOtel_UrlNew");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.ImageUrl)
                .HasMaxLength(250)
                .HasColumnName("ImageURL");
            entity.Property(e => e.IrctcHotelCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("IRCTC_HotelCode");
            entity.Property(e => e.IsActive).HasDefaultValue(true);
            entity.Property(e => e.IsOffline).HasColumnName("isOffline");
            entity.Property(e => e.Landline)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Latitude).HasColumnType("numeric(18, 6)");
            entity.Property(e => e.Longitude).HasColumnType("numeric(18, 6)");
            entity.Property(e => e.MmtAccessToken)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("MMT_AccessToken");
            entity.Property(e => e.MmtHotelCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("MMT_HotelCode");
            entity.Property(e => e.PatternId).HasColumnName("PatternID");
            entity.Property(e => e.RedirectUrl)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("RedirectURL");
        });

        modelBuilder.Entity<TblRoomDetail>(entity =>
        {
            entity.HasKey(e => e.RoomId).HasName("PK__tbl_Room__3286393932CD4365");

            entity.ToTable("tbl_RoomDetail");

            entity.Property(e => e.EntryDate).HasColumnType("datetime");
            entity.Property(e => e.HotelId)
                .IsRequired()
                .HasMaxLength(32)
                .IsUnicode(false);
            entity.Property(e => e.IsActive).HasDefaultValue(true);
            entity.Property(e => e.OffLineDate).HasColumnType("datetime");
            entity.Property(e => e.OldateTo).HasColumnName("OLDateTo");
            entity.Property(e => e.Oldatefrom).HasColumnName("OLDatefrom");
            entity.Property(e => e.RoomNo)
                .IsRequired()
                .HasMaxLength(16)
                .IsUnicode(false);

            entity.HasOne(d => d.Category).WithMany(p => p.TblRoomDetails)
                .HasForeignKey(d => d.CategoryId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__tbl_RoomD__Categ__5070F446");

            entity.HasOne(d => d.Hotel).WithMany(p => p.TblRoomDetails)
                .HasForeignKey(d => d.HotelId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__tbl_RoomD__Hotel__4F7CD00D");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}